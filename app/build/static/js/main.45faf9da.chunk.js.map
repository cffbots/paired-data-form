{"version":3,"sources":["serviceWorker.ts","pages/Welcome.tsx","pages/Projects.tsx","oneOfSplat.tsx","GeneSpectraTable.tsx","expanders/ExtractionExpander.tsx","expanders/GenomeExpander.tsx","expanders/InstrumentExpander.tsx","expanders/SampleGrowthConditionsExpander.tsx","textTable.ts","GenomeMetabolomicsTable.tsx","PairedDataRecord.tsx","useFetch.tsx","pages/Project.tsx","ForeignKeyField.tsx","validate.ts","App.tsx","GenomeMetabolomeLinksField.tsx","pages/AddProject.tsx","pages/EditProject.tsx","Decide.tsx","auth.tsx","pages/PendingProjects.tsx","pages/ReviewProject.tsx","pages/Login.tsx","pages/Logout.tsx","ProtectedRoute.tsx","index.tsx","Routes.tsx"],"names":["Boolean","window","location","hostname","match","Welcome","react","data","_id","gnps","pi","nr_genomes","nr_growth_conditions","nr_extraction_methods","nr_instrumentation_methods","nr_genome_metabolmics_links","nr_genecluster_mspectra_links","Projects","rows","map","d","key","react_router_dom","to","Table","oneOfSplat","schema","prop","offset","splat","Map","dependencies","oneOf","forEach","Object","keys","properties","filter","p","set","size","title","GeneSpectraTable","props","BGC_MS2_links","mySchema","items","myProps","cols","v","headers","i","push","bgcSplat","BGC_ID","length","bgcCols","Array","from","depSplat","concat","values","depCols","r","tds","c","ci","join","bgcTds","depTds","condensed","striped","bordered","colSpan","ExtractionExpander","classCallCheck","this","fk","foreignTable","labelField","lookup","experimental","createClass","value","s","row","foreignItem","find","td","tdi","_this","k","textColsOf","solventSchema","solvent","solventName","anyOf","enum","Other_solvent","ratio","sep","href","_this2","label","GenomeExpander","oneOfs","nested","indexOf","lvl1","nestedValues","InstrumentExpander","htmlCols","typeSchema","modeSchema","typeLabel","instrument","instrumentation","other_instrument","modeLabel","SampleGrowthConditionsExpander","mediumCols","medium_type","medium","mediumSchema","envSchema","environment","mediumTypeCol","mediumLabel","Other_medium","envLabel","Other_environment","unshift","tsvExport","expanders","gmProps","genome_metabolome_links","foreignKeys","Set","e","has","h","textRow","textCols","toConsumableArray","textTable","tsvUrl","bj","btoa","label2value","hit","jsonDocument","genomes","genomeLabels","samplePreparations","samplePreparationLabels","extractionMethods","extractionMethodLabels","instrumentationMethods","instrumentationMethodLabels","gmRows","metabolomicsFile","genomeLabel","genome","genome_ID","genome_type","genome_label","genbankAccession","GenBank_accession","refseqAccession","RefSeq_accession","ena","ENA_NCBI_accession","mgnify","MGnify_accession","biosample","BioSample_accession","pubs","publications","collapseGenome","add","samplePreparationLabel","sample","sample_preparation_method","medium_details","type","mediumValue","sample_preparation","temp","growth_temperature","aeration","Aeration","growingTime","growing_time","phase","growth_phase_OD","cond","other_growth_conditions","metagenomeLabel","metagenomeValue","metagenome_details","metadesc","metagenomic_sample_description","collapseSamplePreparation","extractionMethodLabel","extract","extraction_method","solvents","split","solventString","_solventString$split","_solventString$split2","slicedToArray","solventLabel","solventValue","extraction_methods","parseFloat","other","other_extraction_parameters","collapseExtractionMethod","instrumentationMethodLabel","instr","instrumentation_method","instrTypeLabel","Instrumentation","instrTypeValue","instrumentation_methods","column","mode","range","coll","collision_energy","buf","Buffering","buffering","other_instrumentation","collapseInstrumentationMethod","metabolomics_file","sample_preparation_label","extraction_method_label","instrumentation_method_label","version","personal","metabolomics","GenomeMetabolomicsTable","genomeExpander","sampleExpander","extractionExpander","instrumentExpander","field","genomeHeaders","ths","sampleHeaders","extractionHeaders","instrumentHeaders","genomeTds","sampleTds","extractionTds","instrumentTds","genomemetabolometsvfn","GNPSMassIVE_ID","_React$useState","React","_React$useState2","isCollapsed","changeCollapsing","columnIndexesToShowCollapsed","splice","children","Button","bsSize","onClick","Glyphicon","glyph","download","PairedDataRecord","dataUrl","mimeType","arguments","undefined","JSON","stringify","record2dataUrl","submitterProps","submitter","metabolomeProps","metabolome","filename","GenomeMetabolomicsTable_GenomeMetabolomicsTable","GeneSpectraTable_GeneSpectraTable","useFetch","url","_useState","useState","_useState2","setData","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","stop","apply","useEffect","fetchData","Project","record","PairedDataRecord_PairedDataRecord","ForeignKeyField","_React$Component","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","state","open","options","handleChange","option","onChange","loadOptions","uiSchema","foreignKey","search","name","onOpen","setState","onClose","event","inherits","className","formData","react_select_esm","defaultValue","menuIsOpen","description","foreignKeySearch","app","requiredProp","labelSearcher","form","formRef","current","doc","Error","sampleLabels","extractionLabels","instrumentLabels","ms2Labels","findDuplicates","labels","index","validateDocument","errors","reduce","addError","gmIds","spIds","emIds","imIds","genomeMetabolomeLink","includes","msUrls","geneSpectraLink","MS2_URL","formFields","collapsible","CollapsibleField","gmarray","uploadRef","ArrayField_default","click","accept","target","files","file","reader","FileReader","onload","result","tsvParse","formContext","uploadGenomeMetabolomeLinks","readAsText","ref","style","display","App","initDoc","validDoc","onSubmit","_ref","onReset","onError","PI_email","PI_institution","PI_name","submitter_email","submitter_institution","submitter_name","MaSSIVE_URL","fillForm","onUpload","fillFormFromFile","evt","parse","loadExample1","then","submit","injectForeignKeySearchMethods","lib_default","fields","validate","ButtonToolbar","ButtonGroup","bsStyle","AddProject","App_App","EditProject","Decide","onApprove","onDeny","AuthContext","createContext","token","setToken","PendingProjects","useContext","Decide_Decide","ReviewProject","required","username","default","password","Login","onLogin","Logout","onLogout","ProtectedRoute","defaultToken","localStorage","getItem","Provider","react_router","Logout_Logout","removeItem","Login_Login","creds","setItem","ReactDOM","render","react_default","createElement","Navbar","Header","Brand","Nav","react_router_bootstrap_lib","NavItem","path","exact","component","ProtectedRoute_ProtectedRoute","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45faf9da.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\n\nexport function Welcome() {\n    return (\n        <div>\n            <h1>Paired omics data platform</h1>\n            <p>This Paired Data Platform is a community-based initiative standardizing links between genomic and metabolomics data in a computer-readable manner to further the field of natural products discovery. \n            </p>\n        </div>\n    );\n}","import * as React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [{\n    _id: '/projects/MSV000078839.1',\n    gnps: 'MSV000078839',\n    pi: 'Justin van der Hooft',\n    nr_genomes: 3,\n    nr_growth_conditions: 3,\n    nr_extraction_methods: 3,\n    nr_instrumentation_methods: 1,\n    nr_genome_metabolmics_links: 21,\n    nr_genecluster_mspectra_links: 0,\n}];\n\nexport function Projects() {\n    const rows = data.map(d => (\n        <tr key={d._id}>\n            <td><Link to={d._id}>{d.gnps}</Link></td>\n            <td>{d.pi}</td>\n            <td>{d.nr_genomes}</td>\n            <td>{d.nr_growth_conditions}</td>\n            <td>{d.nr_extraction_methods}</td>\n            <td>{d.nr_instrumentation_methods}</td>\n            <td>{d.nr_genome_metabolmics_links}</td>\n            <td>{d.nr_genecluster_mspectra_links}</td>\n        </tr>\n    ));\n    return (\n        <div>\n            <h1>List page with all approved datasets, search functionality</h1>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>GNPS Massive identifier</th>\n                        <th>Principal investigator</th>\n                        <th>Nr of (meta)genomes</th>\n                        <th>Nr of growth conditions</th>\n                        <th>Nr of extraction methods</th>\n                        <th>Nr of instrumention methods</th>\n                        <th>Nr of links between genomes and metabolomics</th>\n                        <th>Nr of links between gene clusters and MS2 spectra</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </Table>\n        </div>\n    );\n}","import * as React from 'react';\n\nexport function oneOfSplat(schema: any, prop: string, offset: number) {\n    const splat = new Map<string, JSX.Element>();\n    schema.dependencies[prop].oneOf.forEach((d: any) => {\n        Object.keys(d.properties).filter(p => p !== prop).forEach((p: any) => {\n            splat.set(p, <th key={offset + splat.size}>{d.properties[p].title}</th>);\n        });\n    });\n    return splat;\n}\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\nimport { oneOfSplat } from \"./oneOfSplat\";\n\ninterface IProps {\n  data: any;\n  schema: any;\n}\n\nexport const GeneSpectraTable = (props: IProps) => {\n  if (!props.data.BGC_MS2_links) {\n    return <p>No links between gene clusters and MS2 spectra.</p>;\n  }\n  const mySchema = props.schema.properties.BGC_MS2_links.items;\n  const myProps = mySchema.properties;\n  const depKey = \"link\";\n  const bgcKey = \"BGC_ID\";\n  const cols = Object.keys(myProps).filter(v => v !== depKey && v !== bgcKey);\n  let headers: JSX.Element[] = [];\n  cols.forEach((v: any, i: number) => {\n    const prop = myProps[v];\n    if (prop.title) {\n      headers.push(<th key={i}>{prop.title}</th>);\n    } else {\n      headers.push(<th key={i}>{v}</th>);\n    }\n  });\n\n  const bgcSplat = oneOfSplat(\n    mySchema.properties.BGC_ID,\n    \"BGC\",\n    headers.length\n  );\n  const bgcCols = Array.from(bgcSplat.keys());\n  headers = headers.concat(Array.from(bgcSplat.values()));\n\n  const depSplat = oneOfSplat(mySchema, depKey, headers.length);\n  const depCols = Array.from(depSplat.keys());\n  headers = headers.concat(Array.from(depSplat.values()));\n\n  const rows = props.data.BGC_MS2_links.map((r: any, i: number) => {\n    let tds = cols.map((c: any, ci: number) => {\n      if (c === \"verification\") {\n        return <td key={ci}>{r[c].join(\";\")}</td>;\n      }\n      return <td key={ci}>{r[c]}</td>;\n    });\n\n    const bgcTds = bgcCols.map((c: string, ci: number) => {\n      return <td key={tds.length + ci}>{r.BGC_ID[c]}</td>;\n    });\n    tds = tds.concat(bgcTds);\n\n    const depTds = depCols.map((c: string, ci: number) => {\n      return <td key={tds.length + ci}>{r[c]}</td>;\n    });\n    tds = tds.concat(depTds);\n    return <tr key={i}>{tds}</tr>;\n  });\n\n  return (\n    <Table condensed={true} striped={true} bordered={true}>\n      <thead>\n        <tr>\n          <td colSpan={cols.length} />\n          <td colSpan={bgcCols.length}>{myProps[bgcKey].title}</td>\n          <td colSpan={depCols.length}>{myProps[depKey].title}</td>\n        </tr>\n        <tr>{headers}</tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  );\n};\n","import * as React from \"react\";\n\nimport { IExpander } from \"./AbstractExpander\";\n\nexport class ExtractionExpander implements IExpander {\n  public fk = \"extraction_method_label\";\n  private foreignTable = \"extraction_methods\";\n  private labelField = \"extraction_method\";\n  private schema: any;\n  private lookup: any[];\n\n  constructor(schema: any, data: any) {\n    this.schema =\n      schema.properties.experimental.properties[\n        this.foreignTable\n      ].items.properties;\n    this.lookup = data.experimental[this.foreignTable];\n  }\n\n  public ths(offset: number) {\n    return this.headers().map((s, i) => <th key={i + offset}>{s}</th>);\n  }\n\n  public tds(row: any, offset: number) {\n    const foreignItem = this.find(row);\n    const foreignCols = this.cols(foreignItem);\n    return foreignCols.map((td, tdi) => {\n      return <td key={tdi + offset}>{td}</td>;\n    });\n  }\n\n  public headers() {\n    return Object.keys(this.schema).map(k => this.schema[k].title);\n  }\n\n  public textCols(row: any): string[] {\n    const foreignItem = this.find(row);\n    return this.textColsOf(foreignItem);\n  }\n\n  private textColsOf(row: any) {\n    const solventsKey = \"solvents\";\n    const solventSchema = this.schema[solventsKey].items.properties.solvent;\n    const sep = ';';\n    return Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === solventsKey) {\n        return v.map((s: any, i: number) => {\n          const solventName = solventSchema.anyOf.find(\n            (r: any) => r.enum[0] === s.solvent\n          ).title;\n          if (solventName === \"Other solvent\") {\n            return `${s.Other_solvent}=${s.ratio}`;\n          }\n          return `${solventName}=${s.ratio}`;\n        }).join(sep);\n      }\n      return v;\n    });\n  }\n\n  private cols(row: any) {\n    const solventsKey = \"solvents\";\n    const solventSchema = this.schema[solventsKey].items.properties.solvent;\n    return Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === solventsKey) {\n        return v.map((s: any, i: number) => {\n          const solventName = solventSchema.anyOf.find(\n            (r: any) => r.enum[0] === s.solvent\n          ).title;\n          let sep = \";\";\n          if (v.length - 1 === i) {\n            sep = \"\";\n          }\n          if (solventName === \"Other solvent\") {\n            return (\n              <span key={s.Other_solvent}>\n                {s.Other_solvent}={s.ratio}\n                {sep}\n              </span>\n            );\n          }\n          return (\n            <span key={s.solvent}>\n              <a href={s.solvent}>{solventName}</a>={s.ratio}\n              {sep}\n            </span>\n          );\n        });\n      }\n      return v;\n    });\n  }\n\n  private find(row: any) {\n    const label = row[this.fk];\n    return this.lookup.find((r: any) => r[this.labelField] === label);\n  }\n}\n","import * as React from \"react\";\n\nimport { IExpander } from \"./AbstractExpander\";\n\nexport class GenomeExpander implements IExpander {\n  public fk = \"genome_label\";\n  private foreignTable = \"genomes\";\n  private labelField = \"genome_label\";\n  private schema: any;\n  private lookup: any[];\n\n  constructor(schema: any, data: any) {\n    this.schema = schema.properties[this.foreignTable].items.properties;\n    this.lookup = data[this.foreignTable];\n  }\n\n  public ths(offset: number) {\n    return this.headers().map((s, i) => <th key={i + offset}>{s}</th>);\n  }\n\n  public tds(row: any, offset: number) {\n    const foreignItem = this.find(row);\n    const foreignCols = this.cols(foreignItem);\n    return foreignCols.map((td, tdi) => {\n      return <td key={tdi + offset}>{td}</td>;\n    });\n  }\n\n  public headers() {\n    const nestedProp = \"genome_ID\";\n    const oneOfProp = \"genome_type\";\n    const oneOfs = this.schema[nestedProp].dependencies[oneOfProp].oneOf;\n    const nested: string[] = [];\n    oneOfs.forEach((oneOf: any) => {\n      Object.keys(oneOf.properties).forEach(k => {\n        if (k === oneOfProp) {\n          if (nested.indexOf(this.schema[nestedProp].title) === -1) {\n            nested.push(this.schema[nestedProp].title);\n          }\n        } else if (nested.indexOf(oneOf.properties[k].title) === -1) {\n          nested.push(oneOf.properties[k].title);\n        }\n      });\n    });\n    const lvl1 = Object.keys(this.schema)\n      .filter(k => k !== nestedProp)\n      .map(k => this.schema[k].title);\n    return nested.concat(lvl1);\n  }\n\n  public textCols(row: any): string[] {\n    const foreignItem = this.find(row);\n    return this.cols(foreignItem);\n  }\n\n  private cols(row: any) {\n    const nestedProp = \"genome_ID\";\n    const oneOfProp = \"genome_type\";\n    const oneOfs = this.schema[nestedProp].dependencies[oneOfProp].oneOf;\n    const nested: string[] = [];\n    const nestedValues: string[] = [];\n    oneOfs.forEach((oneOf: any) => {\n      Object.keys(oneOf.properties).forEach(k => {\n        if (k === oneOfProp) {\n          if (nested.indexOf(nestedProp) === -1) {\n            nested.push(nestedProp);\n            nestedValues.push(row[nestedProp][k]);\n          }\n        } else if (nested.indexOf(k) === -1) {\n          nested.push(k);\n          nestedValues.push(row[nestedProp][k]);\n        }\n      });\n    });\n    const lvl1 = Object.keys(this.schema)\n      .filter(k => k !== nestedProp)\n      .map(k => row[k]);\n    return nestedValues.concat(lvl1);\n  }\n\n  private find(row: any) {\n    const label = row[this.fk];\n    return this.lookup.find(\n      (r: any) => r[this.labelField] === label\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { IExpander } from \"./AbstractExpander\";\n\nexport class InstrumentExpander implements IExpander {\n  public fk = \"instrumentation_method_label\";\n  private foreignTable = \"instrumentation_methods\";\n  private labelField = \"instrumentation_method\";\n  private schema: any;\n  private lookup: any[];\n\n  constructor(schema: any, data: any) {\n    this.schema =\n      schema.properties.experimental.properties[\n        this.foreignTable\n      ].items.properties;\n    this.lookup = data.experimental[this.foreignTable];\n  }\n\n  public ths(offset: number) {\n    return this.headers().map((s, i) => <th key={i + offset}>{s}</th>);\n  }\n\n  public tds(row: any, offset: number) {\n    const foreignItem = this.find(row);\n    const foreignCols = this.htmlCols(foreignItem);\n    return foreignCols.map((td, tdi) => {\n      return <td key={tdi + offset}>{td}</td>;\n    });\n  }\n\n  public textCols(row: any) {\n    const foreignItem = this.find(row);\n    return this.textColsOf(foreignItem);\n  }\n\n  public headers() {\n    return Object.keys(this.schema).map(k => this.schema[k].title);\n  }\n\n  private htmlCols(row: any) {\n    const typeKey = \"instrumentation\";\n    const typeSchema = this.schema[typeKey];\n    const modeKey = \"mode\";\n    const modeSchema = this.schema[modeKey];\n    return Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === typeKey) {\n        const typeLabel = typeSchema.properties.instrument.anyOf.find(\n          (r: any) => r.enum[0] === v.instrument\n        ).title;\n        if (typeLabel === \"Other Mass Spectrometer\") {\n          return (\n            <span key={row.instrumentation.other_instrument}>\n              {row.instrumentation.other_instrument}\n            </span>\n          );\n        }\n        return (\n          <a key={v.instrument} href={v.instrument}>\n            {typeLabel}\n          </a>\n        );\n      } else if (k === modeKey) {\n        const modeLabel = modeSchema.anyOf.find((r: any) => r.enum[0] === v)\n          .title;\n        return (\n          <a key={v} href={v}>\n            {modeLabel}\n          </a>\n        );\n      }\n      return v;\n    });\n  }\n\n  private textColsOf(row: any) {\n    const typeKey = \"instrumentation\";\n    const typeSchema = this.schema[typeKey];\n    const modeKey = \"mode\";\n    const modeSchema = this.schema[modeKey];\n    return Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === typeKey) {\n        const typeLabel = typeSchema.properties.instrument.anyOf.find(\n          (r: any) => r.enum[0] === v.instrument\n        ).title;\n        if (typeLabel === \"Other Mass Spectrometer\") {\n          return row.instrumentation.other_instrument;\n        }\n        return typeLabel;\n      } else if (k === modeKey) {\n        const modeLabel = modeSchema.anyOf.find((r: any) => r.enum[0] === v)\n          .title;\n        return modeLabel;\n      }\n      return v;\n    });\n  }\n\n  private find(row: any) {\n    const label = row[this.fk];\n    return this.lookup.find((r: any) => r[this.labelField] === label);\n  }\n}\n","import * as React from \"react\";\n\nimport { IExpander } from \"./AbstractExpander\";\n\nexport class SampleGrowthConditionsExpander implements IExpander {\n  public fk = \"sample_preparation_label\";\n  private foreignTable = \"sample_preparation\";\n  private labelField = \"sample_preparation_method\";\n  private schema: any;\n  private lookup: any[];\n\n  constructor(schema: any, data: any) {\n    this.schema =\n      schema.properties.experimental.properties[\n        this.foreignTable\n      ].items.properties;\n    this.lookup = data.experimental[this.foreignTable];\n  }\n\n  public ths(offset: number) {\n    return this.headers().map((s, i) => <th key={i + offset}>{s}</th>);\n  }\n\n  public tds(row: any, offset: number) {\n    const foreignItem = this.find(row);\n    const foreignCols = this.htmlCols(foreignItem);\n    return foreignCols.map((td, tdi) => {\n      return <td key={tdi + offset}>{td}</td>;\n    });\n  }\n\n  public headers() {\n    const mediumKey = \"medium_details\";\n    const mediumCols = [\n      this.schema[mediumKey].properties.medium_type.title,\n      this.schema[mediumKey].properties.medium.title\n    ];\n    const cols = Object.keys(this.schema).filter(k => k !== mediumKey).map(k => this.schema[k].title);\n    return mediumCols.concat(cols);\n  }\n\n  public textCols(row: any) {\n    const foreignItem = this.find(row);\n    return this.textColsOf(foreignItem);\n  }\n\n  private textColsOf(row: any) {\n    const mediumKey = \"medium_details\";\n    const mediumSchema = this.schema[mediumKey].properties.medium;\n    const envKey = \"metagenome_details\";\n    const envSchema = this.schema[envKey].properties.environment;\n    const mediumTypeCol = row[mediumKey].medium_type;\n    const cols = Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === mediumKey) {\n        const mediumLabel = mediumSchema.anyOf.find(\n          (r: any) => r.enum[0] === v.medium\n        ).title;\n        if (v.medium === \"other\") {\n          return v.Other_medium;\n        } else {\n          return mediumLabel;\n        }\n      } else if (k === envKey) {\n        if (!v.environment) {\n          return undefined;\n        }\n        const envLabel = envSchema.anyOf.find(\n          (r: any) => r.enum[0] === v.environment\n        ).title;\n        if (v.environment === \"other\") {\n          return v.Other_environment;\n        } else {\n          return envLabel;\n        }\n      }\n      return v;\n    });\n    cols.unshift(mediumTypeCol);\n    return cols;\n  }\n\n  private htmlCols(row: any) {\n    const mediumKey = \"medium_details\";\n    const mediumSchema = this.schema[mediumKey].properties.medium;\n    const envKey = \"metagenome_details\";\n    const envSchema = this.schema[envKey].properties.environment;\n    const mediumTypeCol = row[mediumKey].medium_type;\n    const cols = Object.keys(this.schema).map(k => {\n      const v = row[k];\n      if (k === mediumKey) {\n        const mediumLabel = mediumSchema.anyOf.find(\n          (r: any) => r.enum[0] === v.medium\n        ).title;\n        if (v.medium === \"other\") {\n          return (\n            <span>\n              {v.Other_medium}\n            </span>\n          );\n        } else {\n          return (\n            <a key={v.medium} href={v.medium}>\n              {mediumLabel}\n            </a>\n          );\n        }\n      } else if (k === envKey) {\n        if (!v.environment) {\n          return undefined;\n        }\n        const envLabel = envSchema.anyOf.find(\n          (r: any) => r.enum[0] === v.environment\n        ).title;\n        if (v.environment === \"other\") {\n          return v.Other_environment;\n        } else {\n          return (\n            <a key={v} href={v}>\n              {envLabel}\n            </a>\n          );\n        }\n      }\n      return v;\n    });\n    cols.unshift(mediumTypeCol);\n    return cols;\n  }\n\n  private find(row: any) {\n    const label = row[this.fk];\n    return this.lookup.find((r: any) => r[this.labelField] === label);\n  }\n}\n","import { IExpander } from './expanders/AbstractExpander';\nimport { ExtractionExpander } from './expanders/ExtractionExpander';\nimport { GenomeExpander } from './expanders/GenomeExpander';\nimport { InstrumentExpander } from './expanders/InstrumentExpander';\nimport { SampleGrowthConditionsExpander } from './expanders/SampleGrowthConditionsExpander';\n\nexport function textTable(schema: any, data: any): string[][] {\n    const expanders: IExpander[] = [\n        new GenomeExpander(schema, data),\n        new SampleGrowthConditionsExpander(schema, data),\n        new ExtractionExpander(schema, data),\n        new InstrumentExpander(schema, data),\n    ];\n    const gmProps = schema.properties.genome_metabolome_links.items.properties;\n    const foreignKeys = new Set(expanders.map(e => e.fk));\n    const cols = Object.keys(gmProps).filter(k => !foreignKeys.has(k));\n    const headers: string[] = cols.map((s) => {\n        const field = gmProps[s];\n        return field.title;\n    });\n    expanders.forEach(e => e.headers().forEach(h => headers.push(h)));\n    const gmRows = data.genome_metabolome_links;\n    const rows: string[][] = gmRows.map((row: any, i: number) => {\n        const textRow = cols.map((td, tdi) => {\n            return row[td];\n        });\n        expanders.forEach(e => e.textCols(row).forEach(c => textRow.push(c)));\n        return textRow;\n    });\n    return [headers, ...rows];\n}\n\nfunction tsvExport(schema: any, data: any) {\n    const newline = '\\n';\n    const sep = '\\t';\n    return textTable(schema, data).map(r => r.join(sep)).join(newline);\n}\n\nexport function tsvUrl(schema: any, data: any) {\n    const mimeType = 'text/tab-separated-values';\n    const bj = btoa(tsvExport(schema, data));\n    return `data:${mimeType};base64,${bj}`;\n}\n\nfunction label2value(label: string, oneOf: any[]) {\n    const hit = oneOf.find(e => e.title === label);\n    if (hit) {\n        return hit.enum[0];\n    }\n    return hit;\n}\n\nfunction collapseSamplePreparation(row: any, schema: any) {\n     const sample: any = {\n        sample_preparation_method: row['Sample Growth Conditions Label'],\n        medium_details: {}\n    }\n    const type = row['Medium type'];\n    if (type) {\n        sample.medium_details.medium_type = type;\n    }\n     const mediumLabel = row['Growth medium'];\n    if (mediumLabel) {\n        const mediumValue = label2value(mediumLabel, schema.properties.experimental.properties.sample_preparation.items.properties.medium_details.properties.medium.anyOf);\n        if (mediumValue) {\n            sample.medium_details.medium = mediumValue;\n        } else {\n            sample.medium_details.Other_medium = mediumLabel;\n        }\n    }\n    const temp = row['Growth temperature'];\n    if (temp) {\n        sample.growth_temperature = temp*1;\n    }\n    const aeration = row.Aeration;\n    if (aeration) {\n        sample.aeration = aeration;\n    }\n    const growingTime = row['Growth time'];\n    if (growingTime) {\n        sample.growing_time = growingTime*1;\n    }\n    const phase = row['Growth phase or OD'];\n    if (phase) {\n        sample.growth_phase_OD = phase;\n    }\n    const cond = row['Other growth conditions'];\n    if (cond) {\n        sample.other_growth_conditions = cond;\n    }\n    const metagenomeLabel = row['Metagenome details'];\n    const metagenomeValue = label2value(metagenomeLabel, schema.properties.experimental.properties.sample_preparation.items.properties.metagenome_details.properties.environment.anyOf);\n    if (metagenomeValue) {\n        sample.metagenome_details = {environment: metagenomeValue};\n    } else {\n        sample.metagenome_details = {Other_environment: metagenomeLabel};\n    }\n    const metadesc = row['Metagenomic sample description'];\n    if (metadesc) {\n        sample.metagenomic_sample_description = metadesc;\n    }\n    return sample;\n}\n\nfunction collapseExtractionMethod(row: any, schema: any) {\n    const extract: any = {\n        extraction_method: row['Extraction Method Label'],\n        solvents: []\n    };\n    const solventsString: string = row['Extraction solvent'];\n    solventsString.split(';').forEach(solventString => {\n        const [solventLabel, ratio] = solventString.split('=');\n        const solventValue = label2value(solventLabel, schema.properties.experimental.properties.extraction_methods.items.properties.solvents.items.properties.solvent.anyOf);\n        if (solventValue) {\n            extract.solvents.push({\n                solvent: solventValue, \n                ratio: parseFloat(ratio)\n            });\n        } else {\n            extract.solvents.push({\n                Other_solvent: solventLabel, \n                ratio: parseFloat(ratio)\n            });\n        }\n    });\n    const other = row['Other extraction details'];\n    if (other) {\n        extract.other_extraction_parameters = other;\n    }\n    return extract;\n}\n\nfunction collapseInstrumentationMethod(row: any, schema: any) {\n    const instr: any = {\n        instrumentation_method: row['Instrumentation Method Label']\n    };\n    const instrTypeLabel = row.Instrumentation;\n    const instrTypeValue = label2value(instrTypeLabel, schema.properties.experimental.properties.instrumentation_methods.items.properties.instrumentation.properties.instrument.anyOf);\n    if (instrTypeValue) {\n        instr.instrumentation = {instrument: instrTypeValue}\n    } else {\n        instr.instrumentation = {other_instrument: instrTypeLabel}\n    }\n    const column = row['Column details'];\n    if (column) {\n        instr.column = column;\n    }\n    const mode = row['Instrument mode'];\n    if (mode) {\n        instr.mode = label2value(mode, schema.properties.experimental.properties.instrumentation_methods.items.properties.mode.anyOf);\n    }\n    const range = row['Mass range'];\n    if (range) {\n        instr.range = range;\n    }\n    const coll = row['Collision energy'];\n    if (coll) {\n        instr.collision_energy = coll;\n    }\n    const buf = row.Buffering;\n    if (buf) {\n        instr.buffering = buf;\n    }\n    const other = row['Other instrumentation information'];\n    if (other) {\n        instr.other_instrumentation = other;\n    }\n    return instr;\n}\n\nfunction collapseGenome(row: any) {\n    const genome: any = {\n        genome_ID: {\n            genome_type: row['Genome or Metagenome']\n        },\n        genome_label: row['Genome Label']\n    };\n    const genbankAccession = row['GenBank accession number'];\n    if (genbankAccession) {\n        genome.genome_ID.GenBank_accession = genbankAccession;\n    }\n    const refseqAccession = row['RefSeq accession number'];\n    if (refseqAccession) {\n        genome.genome_ID.RefSeq_accession = refseqAccession;\n    }\n    const ena = row['ENA/NCBI accession number'];\n    if (ena) {\n        genome.genome_ID.ENA_NCBI_accession = ena;\n    }\n    const mgnify = row['MGnify accession number'];\n    if (mgnify) {\n        genome.genome_ID.MGnify_accession = mgnify;\n    }\n    const biosample = row['BioSample accession number'];\n    if (biosample) {\n        genome.BioSample_accession = biosample;\n    }\n    const pubs = row['Key publications'];\n    if (pubs) {\n        genome.publications = pubs;\n    }\n    return genome;\n}\n\nexport function jsonDocument(schema: any, rows: any) {\n    const genomes: any[] = [];\n    const genomeLabels = new Set();\n    const samplePreparations: any[] = [];\n    const samplePreparationLabels = new Set();\n    const extractionMethods: any[] = [];\n    const extractionMethodLabels = new Set();\n    const instrumentationMethods: any[] = [];\n    const instrumentationMethodLabels = new Set();\n    const gmRows: any[] = rows.map((row: any) => {\n        const metabolomicsFile = row['Location of metabolomics data file'];\n        const genomeLabel = row['Genome Label'];\n        if (!genomeLabels.has(genomeLabel)) {\n            genomes.push(collapseGenome(row));\n            genomeLabels.add(genomeLabel);\n        }\n        const samplePreparationLabel = row['Sample Growth Conditions Label'];\n        if (!samplePreparationLabels.has(samplePreparationLabel)) {\n            samplePreparations.push(collapseSamplePreparation(row, schema));\n            samplePreparationLabels.add(samplePreparationLabel);\n        }\n        const extractionMethodLabel = row['Extraction Method Label'];\n        if (!extractionMethodLabels.has(extractionMethodLabel)) {\n            extractionMethods.push(collapseExtractionMethod(row, schema));\n            extractionMethodLabels.add(extractionMethodLabel);\n        }\n        const instrumentationMethodLabel = row['Instrumentation Method Label'];\n        if (!instrumentationMethodLabels.has(instrumentationMethodLabel)) {\n            instrumentationMethods.push(collapseInstrumentationMethod(row, schema));\n            instrumentationMethodLabels.add(instrumentationMethodLabel);\n        }\n        return {\n            genome_label: genomeLabel,\n            metabolomics_file: metabolomicsFile,\n            sample_preparation_label: samplePreparationLabel,\n            extraction_method_label: extractionMethodLabel,\n            instrumentation_method_label: instrumentationMethodLabel\n        };\n    });\n    return {\n        version: \"1\",\n        personal: {},\n        metabolomics: {},\n        genomes,\n        experimental: {\n            sample_preparation: samplePreparations,\n            extraction_methods: extractionMethods,\n            instrumentation_methods: instrumentationMethods\n        },\n        genome_metabolome_links: gmRows\n    }\n}","import * as React from \"react\";\n\nimport { Table, Button, Glyphicon } from 'react-bootstrap';\n\nimport { ExtractionExpander } from './expanders/ExtractionExpander';\nimport { GenomeExpander } from './expanders/GenomeExpander';\nimport { InstrumentExpander } from './expanders/InstrumentExpander';\nimport { SampleGrowthConditionsExpander } from './expanders/SampleGrowthConditionsExpander';\nimport { tsvUrl } from './textTable';\n\ninterface IProps {\n    data: any;\n    schema: any;\n}\n\nexport const GenomeMetabolomicsTable = (props: IProps) => {\n    if (!props.data.genome_metabolome_links || props.data.genome_metabolome_links.length === 0) {\n        return <p>No links between (meta)genomes and metabolimics data files.</p>;\n    }\n    const genomeExpander = new GenomeExpander(props.schema, props.data);\n    const sampleExpander = new SampleGrowthConditionsExpander(props.schema, props.data);\n    const extractionExpander = new ExtractionExpander(props.schema, props.data);\n    const instrumentExpander = new InstrumentExpander(props.schema, props.data);\n    const gmProps = props.schema.properties.genome_metabolome_links.items.properties;\n    const foreignKeys = new Set([\n        genomeExpander.fk,\n        sampleExpander.fk,\n        extractionExpander.fk,\n        instrumentExpander.fk,\n    ]);\n    const cols = Object.keys(gmProps).filter(k => !foreignKeys.has(k));\n\n    let headers = cols.map((s) => {\n        const field = gmProps[s];\n        return <th key={s}>{field.title}</th>;\n    });\n    const genomeHeaders = genomeExpander.ths(headers.length);\n    headers = headers.concat(genomeHeaders);\n    const sampleHeaders = sampleExpander.ths(headers.length);\n    headers = headers.concat(sampleHeaders);\n    const extractionHeaders = extractionExpander.ths(headers.length);\n    headers = headers.concat(extractionHeaders);\n    const instrumentHeaders = instrumentExpander.ths(headers.length);\n    headers = headers.concat(instrumentHeaders);\n\n    const gmRows = props.data.genome_metabolome_links;\n    let rows = gmRows.map((row: any, i: number) => {\n        let tds = cols.map((td, tdi) => {\n            if (td === 'Metabolomics_Data_File') {\n                return (<td key={tdi}><a href={row[td]}>{row[td]}</a></td>);\n            }\n            return (<td key={tdi}>{row[td]}</td>);\n        });\n\n        const genomeTds = genomeExpander.tds(row, tds.length);\n        tds = tds.concat(genomeTds);\n        const sampleTds = sampleExpander.tds(row, tds.length);\n        tds = tds.concat(sampleTds);\n        const extractionTds = extractionExpander.tds(row, tds.length);\n        tds = tds.concat(extractionTds);\n        const instrumentTds = instrumentExpander.tds(row, tds.length);\n        tds = tds.concat(instrumentTds);\n        return (\n            <tr key={i}>\n                {tds}\n            </tr>\n        );\n    });\n    const genomemetabolometsvfn = 'paired-' + props.data.metabolomics.GNPSMassIVE_ID + '-genome-metabolome.tsv';\n\n    const [isCollapsed, changeCollapsing] = React.useState(true);\n    const columnIndexesToShowCollapsed = [0, 8, 18, 21, 29];\n    if (isCollapsed) {\n        // remove all columns not in columnIndexesToShowFolded\n        genomeHeaders.splice(0, genomeHeaders.length - 1);\n        sampleHeaders.splice(0, sampleHeaders.length - 1);\n        extractionHeaders.splice(0, extractionHeaders.length - 1);\n        instrumentHeaders.splice(0, instrumentHeaders.length - 1);\n        headers = columnIndexesToShowCollapsed.map(c => headers[c]);\n        rows = rows.map((r: any, i: number) => {\n            return <tr key={i}>\n                {columnIndexesToShowCollapsed.map(c => r.props.children[c])}\n            </tr>;\n        });\n    }\n    return (\n        <div>\n            <Table condensed={true} striped={true} bordered={true}>\n                <thead>\n                    <tr>\n                        <th colSpan={cols.length}>\n                            <Button bsSize=\"xs\" onClick={() => changeCollapsing(!isCollapsed)} title={isCollapsed ? 'Expand table, show all columns' : 'Collapse table, only show label columns'}>\n                                <Glyphicon glyph={isCollapsed ? 'plus' : 'minus'} /> {isCollapsed ? 'Expand' : 'Collapse'}\n                            </Button>\n                        </th>\n                        <th colSpan={genomeHeaders.length}>{gmProps[genomeExpander.fk].title}</th>\n                        <th colSpan={sampleHeaders.length}>{gmProps[sampleExpander.fk].title}</th>\n                        <th colSpan={extractionHeaders.length}>{gmProps[extractionExpander.fk].title}</th>\n                        <th colSpan={instrumentHeaders.length}>{gmProps[instrumentExpander.fk].title}</th>\n                    </tr>\n                    <tr>\n                        {headers}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </Table>\n            <a href={tsvUrl(props.schema, props.data)} download={genomemetabolometsvfn}>tab delimited downoad</a>\n        </div>\n    );\n}","import * as React from \"react\";\n\nimport { Button, Glyphicon } from \"react-bootstrap\";\n\nimport { GeneSpectraTable } from \"./GeneSpectraTable\";\nimport { GenomeMetabolomicsTable } from \"./GenomeMetabolomicsTable\";\n\ninterface IProps {\n  data: any;\n  schema: any;\n}\n\nfunction record2dataUrl(data: object, mimeType = \"application/json\") {\n  const bj = btoa(JSON.stringify(data, null, 4));\n  return `data:${mimeType};base64,${bj}`;\n}\n\nexport const PairedDataRecord = (props: IProps) => {\n    const dataUrl = record2dataUrl(props.data);\n    const submitterProps = props.schema.properties.personal.properties;\n    const submitter = Object.keys(submitterProps).map((s: string) => {\n        const field = submitterProps[s];\n        return <li key={s}>{field.title}: {props.data.personal[s]}</li>;\n    });\n\n    const metabolomeProps = props.schema.properties.metabolomics.properties;\n    const metabolome = Object.keys(metabolomeProps).map((s: string) => {\n        const field = metabolomeProps[s];\n        return <li key={s}>{field.title}: {props.data.metabolomics[s]}</li>;\n    });\n\n    const GNPSMassIVE_ID = props.data.metabolomics.GNPSMassIVE_ID;\n    const filename = `paired_datarecord_${GNPSMassIVE_ID}.json`;\n    return (\n        <div>\n            <h3>iOMEGA Paired data record:</h3>\n            <Button href={dataUrl} download={filename}><Glyphicon glyph=\"download\" /> Download</Button>\n            <h2>Submitter Information</h2>\n            <ul>\n                {submitter}\n            </ul>\n            <h2>Metabolomics project details</h2>\n            <ul>\n                {metabolome}\n            </ul>\n\n            <h2>Links between genomes and metabolomics data</h2>\n            <GenomeMetabolomicsTable data={props.data} schema={props.schema} />\n\n            <h2>Linked gene clusters and MS2 spectra</h2>\n            <GeneSpectraTable data={props.data} schema={props.schema} />\n        </div>\n    );\n};\n","import { useState, useEffect } from \"react\";\nexport const useFetch = (url: string) => {\n    const [data, setData] = useState(null);\n    async function fetchData() {\n        const response = await fetch(url);\n        const json = await response.json();\n        setData(json);\n    }\n    useEffect(() => { fetchData(); }, [url]);\n    return data;\n};\n","import * as React from \"react\";\n\nimport { PairedDataRecord } from \"../PairedDataRecord\";\nimport { Link } from \"react-router-dom\";\nimport { useFetch } from \"../useFetch\";\n\nexport function Project() {\n    const data = useFetch('/examples/paired_datarecord_MSV000078839_example.json');\n    const schema = useFetch('/schema.json');\n    let record = <span>Loading ...</span>;\n    if (data && schema) {\n        record = (\n            <div>\n                <PairedDataRecord data={data} schema={schema}/>\n                <Link to=\"/projects/MSV000078839.1/edit\">Edit</Link>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <h1>Item page for one dataset with a edit and clone button</h1>\n            {record}\n        </div>\n    );\n}","import * as React from \"react\";\n\nimport { Glyphicon } from \"react-bootstrap\";\nimport { FieldProps } from \"react-jsonschema-form\";\nimport Select from \"react-select\";\n\nexport class ForeignKeyField extends React.Component<FieldProps, {}> {\n  public state = {\n    open: false,\n    options: []\n  };\n\n  public handleChange = (option: any) => {\n    this.props.onChange(option.value);\n  };\n\n  public loadOptions = () => {\n    const values = this.props.uiSchema.foreignKey.search(this.props.name);\n    return values.map((v: string) => {\n      return { value: v, label: v };\n    });\n  };\n\n  public render() {\n    let field = (\n      <span className=\"form-control\" onClick={this.onOpen}>\n        {this.props.formData || \"Click to select\"}\n        <span className=\"pull-right\">\n          <Glyphicon glyph=\"chevron-down\" />\n        </span>\n      </span>\n    );\n    if (this.state.open && this.state.options.length > 0) {\n      field = (\n        <Select\n          defaultValue={this.props.formData}\n          onChange={this.onClose}\n          options={this.state.options}\n          menuIsOpen={true}\n        />\n      );\n    }\n    return (\n      <div>\n        <label>{this.props.schema.title}</label>\n        <p>{this.props.schema.description}</p>\n        {field}\n      </div>\n    );\n  }\n\n  public onOpen = () => {\n    const options = this.loadOptions();\n    this.setState({ open: true, options });\n  };\n\n  public onClose = (event: any) => {\n    const value = event.value;\n    this.setState(\n      {\n        value,\n        open: false,\n        options: []\n      },\n      () => {\n        this.props.onChange(value);\n      }\n    );\n  };\n}\n","export function injectForeignKeySearchMethods(uiSchema: any, app: any) {\n  uiSchema.genome_metabolome_links.items.genome_label.foreignKey.search = foreignKeySearch(app, \"genome_label\", genomeLabels);\n  uiSchema.genome_metabolome_links.items.sample_preparation_label.foreignKey.search = foreignKeySearch(app, \"sample_preparation_label\", sampleLabels);\n  uiSchema.genome_metabolome_links.items.extraction_method_label.foreignKey.search = foreignKeySearch(app, \"extraction_method_label\", extractionLabels);\n  uiSchema.genome_metabolome_links.items.instrumentation_method_label.foreignKey.search = foreignKeySearch(app, \"instrumentation_method_label\", instrumentLabels);\n  uiSchema.BGC_MS2_links.items.MS2_URL.foreignKey.search = foreignKeySearch(app, \"MS2_URL\", ms2Labels);\n}\n\nexport function foreignKeySearch(app: any, requiredProp: String, labelSearcher: (doc: any) => string[]) {\n  return (prop: string) => {\n    const form = app.formRef.current;\n    if (!form) {\n      return [];\n    }\n    const doc = (form.state as any).formData;\n    if (!doc) {\n      return [];\n    }\n    if (prop === requiredProp) {\n      return labelSearcher(doc);\n    }\n    throw new Error('Invalid property name: ' + prop);\n  };\n}\n\nfunction genomeLabels(doc: any) {\n  if (!doc.genomes) {\n    return [];\n  }\n  return doc.genomes.map(\n    (r: any) =>\n      r.genome_label\n  );\n}\n\nfunction sampleLabels(doc: any) {\n  if (\n    !doc.experimental.sample_preparation\n  ) {\n    return [];\n  }\n  return doc.experimental.sample_preparation.map(\n    (r: any) => r.sample_preparation_method\n  );\n}\n\nfunction extractionLabels(doc: any) {\n  if (\n    !doc.experimental.extraction_methods\n  ) {\n    return [];\n  }\n  return doc.experimental.extraction_methods.map((r: any) => r.extraction_method);\n}\n\nfunction instrumentLabels(doc: any) {\n  if (\n    doc.experimental.instrumentation_methods === undefined\n  ) {\n    return [];\n  }\n  return doc.experimental.instrumentation_methods.map((r: any) => r.instrumentation_method);\n}\n\nfunction ms2Labels(doc: any) {\n  if (!doc.genome_metabolome_links) {\n    return [];\n  }\n  return doc.genome_metabolome_links.map((r: any) => r.metabolomics_file);\n}\n\nfunction findDuplicates(labels: string[]) {\n  function isNotNull(d: (number | null)): d is number {\n    return d !== null;\n  }\n\n  return labels.map((value, index) => {\n    if (labels.indexOf(value) !== index) {\n      return index;\n    } else {\n      return null\n    }\n  }).filter(isNotNull);\n}\n\nexport function validateDocument(doc: any, errors: any) {\n  if (doc.experimental.extraction_methods) {\n    doc.experimental.extraction_methods.forEach((e: any, i: number) => {\n      const ratioTotal = e.solvents.reduce((c: number, s: any) => {\n        return s.ratio + c;\n      }, 0);\n      if (ratioTotal > 1) {\n        errors.experimental.extraction_methods[i].solvents.addError(\n          'Combined ratio not within 0 and 1'\n        );\n      }\n    });\n  }\n  const gmIds = genomeLabels(doc);\n  findDuplicates(gmIds).forEach(d => {\n    errors.genomes[d].genome_label.addError('Non-unique label');\n  });\n  const spIds = sampleLabels(doc);\n  findDuplicates(spIds).forEach(d => {\n    errors.experimental.sample_preparation[d].sample_preparation_method.addError('Non-unique label');\n  });\n  const emIds = extractionLabels(doc);\n  findDuplicates(emIds).forEach(d => {\n    errors.experimental.extraction_methods[d].extraction_method.addError('Non-unique label');\n  });\n  const imIds = instrumentLabels(doc);\n  findDuplicates(imIds).forEach(d => {\n    errors.experimental.instrumentation_methods[d].instrumentation_method.addError('Non-unique label');\n  });\n  if (doc.genome_metabolome_links) {\n    doc.genome_metabolome_links.forEach(\n      (genomeMetabolomeLink: any, i: number) => {\n        if (\n          genomeMetabolomeLink.genome_label &&\n          !gmIds.includes(genomeMetabolomeLink.genome_label)\n        ) {\n          errors.genome_metabolome_links[i].genome_label.addError(\n            \"Invalid selection\"\n          );\n        }\n        if (\n          genomeMetabolomeLink.sample_preparation_label &&\n          !spIds.includes(genomeMetabolomeLink.sample_preparation_label)\n        ) {\n          errors.genome_metabolome_links[i].sample_preparation_label.addError(\n            \"Invalid selection\"\n          );\n        }\n        if (\n          genomeMetabolomeLink.extraction_method_label &&\n          !emIds.includes(genomeMetabolomeLink.extraction_method_label)\n        ) {\n          errors.genome_metabolome_links[i].extraction_method_label.addError(\n            \"Invalid selection\"\n          );\n        }\n        if (\n          genomeMetabolomeLink.instrumentation_method_label &&\n          !imIds.includes(genomeMetabolomeLink.instrumentation_method_label)\n        ) {\n          errors.genome_metabolome_links[\n            i\n          ].instrumentation_method_label.addError(\"Invalid selection\");\n        }\n      }\n    );\n  }\n  if (doc.BGC_MS2_links) {\n    const msUrls = ms2Labels(doc);\n    findDuplicates(msUrls).forEach(d => {\n      errors.genome_metabolome_links[d].metabolomics_file.addError('Non-unique label');\n    });\n    doc.BGC_MS2_links.forEach((geneSpectraLink: any, i: number) => {\n      if (geneSpectraLink.MS2_URL && !msUrls.includes(geneSpectraLink.MS2_URL)) {\n        errors.BGC_MS2_links[i].MS2_URL.addError(\"Invalid selection\");\n      }\n    });\n  }\n  return errors;\n};\n","import * as React from \"react\";\n\nimport { JSONSchema6 } from \"json-schema\";\nimport { Button, ButtonGroup, ButtonToolbar, Glyphicon } from \"react-bootstrap\";\nimport Form, { ISubmitEvent } from \"react-jsonschema-form\";\nimport CollapsibleField from \"react-jsonschema-form-extras/lib/CollapsibleField\";\n\nimport { ForeignKeyField } from \"./ForeignKeyField\";\nimport { GenomeMetabolomeLinksField } from './GenomeMetabolomeLinksField';\nimport { PairedDataRecord } from \"./PairedDataRecord\";\n\nimport \"./App.css\";\nimport { jsonDocument } from './textTable';\nimport { injectForeignKeySearchMethods, validateDocument } from \"./validate\";\n\nexport interface IState {\n  schema: JSONSchema6;\n  uiSchema: any;\n  initDoc: any;\n  validDoc: any;\n}\n\nconst formFields = {\n  collapsible: CollapsibleField,\n  foreignKey: ForeignKeyField,\n  gmarray: GenomeMetabolomeLinksField,\n};\n\nexport class App extends React.Component<{}, IState> {\n  public state: IState = { schema: {}, uiSchema: {}, initDoc: {}, validDoc: undefined };\n  private uploadRef: React.RefObject<HTMLInputElement>;\n  private formRef: React.RefObject<Form<any>>;\n\n  constructor(props: {}) {\n    super(props);\n    this.uploadRef = React.createRef();\n    this.formRef = React.createRef();\n  }\n\n  public componentDidMount() {\n    fetch(\"/schema.json\")\n      .then(r => r.json())\n      .then(schema => {\n        // react-jsonschema-form does not like $schema key in the schema, it stops validating\n        delete schema['$schema'];\n        return schema;\n      })\n      .then(schema => this.setState({ schema }));\n    fetch(\"/uischema.json\")\n      .then(r => r.json())\n      .then(uiSchema => {\n        injectForeignKeySearchMethods(uiSchema, this);\n        this.setState({ uiSchema });\n      });\n  }\n  \n  public onSubmit = ({ formData }: ISubmitEvent<object>) => {\n    this.setState({ validDoc: formData, initDoc: formData });\n  };\n\n  public onReset = () => {\n    this.setState({ initDoc: {}, validDoc: undefined });\n  }\n\n  public onError = () => {\n    if (this.state.validDoc !== undefined) {\n      // Hide PairedDataRecord when form is invalid\n      this.setState({ validDoc: undefined });\n    }\n  }\n\n  public uploadGenomeMetabolomeLinks = (rows: any[]) => {\n    const doc = jsonDocument(this.state.schema, rows);\n    const formData: any = this.state.initDoc;\n    formData.genomes = doc.genomes;\n    formData.experimental = doc.experimental;\n    formData.genome_metabolome_links = doc.genome_metabolome_links;\n    if (!formData.personal) {\n      formData.personal = {\n        PI_email: undefined,\n        PI_institution: undefined,\n        PI_name: undefined,\n        submitter_email: undefined,\n        submitter_institution: undefined,\n        submitter_name: undefined,\n      };\n    }\n    if (!formData.metabolomics) {\n      formData.metabolomics = {\n        GNPSMassIVE_ID: undefined,\n        MaSSIVE_URL: undefined\n      }\n    }\n    this.fillForm(formData);\n  }\n\n  public render() {\n    const formContext = {\n      uploadGenomeMetabolomeLinks: this.uploadGenomeMetabolomeLinks\n    };\n    return (\n      <div className=\"App\">\n        {Object.keys(this.state.schema).length > 0 &&\n          Object.keys(this.state.uiSchema).length > 0 && (\n            <Form\n              schema={this.state.schema}\n              uiSchema={this.state.uiSchema}\n              fields={formFields}\n              formData={this.state.initDoc}\n              onSubmit={this.onSubmit}\n              onError={this.onError}\n              validate={validateDocument}\n              formContext={formContext}\n              ref={this.formRef}\n            >\n              <ButtonToolbar>\n                <ButtonGroup>\n                  <Button onClick={this.loadExample1} title=\"Load example dataset\">\n                    <Glyphicon glyph=\"paperclip\" /> Example\n                  </Button>\n                  <Button onClick={this.onUpload} title=\"Upload JSON file\">\n                    <Glyphicon glyph=\"upload\" /> Upload\n                    <input\n                      type=\"file\"\n                      accept=\"application/json,.json\"\n                      onChange={this.fillFormFromFile}\n                      ref={this.uploadRef}\n                      style={{ display: \"none\" }}\n                    />\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Button type=\"submit\" bsStyle=\"primary\">\n                    <Glyphicon glyph=\"ok\" /> Save\n                  </Button>\n                  <Button type=\"reset\" onClick={this.onReset}>\n                    <Glyphicon glyph=\"remove\" /> Reset\n                  </Button>\n                </ButtonGroup>\n              </ButtonToolbar>\n            </Form>\n          )}\n        {this.state.validDoc && (\n          <PairedDataRecord\n            data={this.state.validDoc}\n            schema={this.state.schema}\n          />\n        )}\n      </div>\n    );\n  }\n \n  public onUpload = () => {\n    if (this.uploadRef.current) {\n      this.uploadRef.current.click();\n    }\n  };\n\n  public fillFormFromFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) {\n      return;\n    }\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = evt => {\n      if (reader.result) {\n        const formData = JSON.parse(reader.result as string);\n        this.fillForm(formData);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n\n  public loadExample1 = () => {\n    fetch('/examples/paired_datarecord_MSV000078839_example.json')\n      .then(r => r.json())\n      .then(this.fillForm);\n  }\n\n  public fillForm = (doc: any) => {\n    this.setState({ initDoc: doc, validDoc: undefined }, () => {\n      const form = this.formRef.current;\n      if (form) {\n        // dts for form does not include submit(), but is documented at\n        // https://react-jsonschema-form.readthedocs.io/en/latest/#submit-form-programmatically\n        (form as any).submit();\n      }\n    });\n  }\n}\n","import * as React from \"react\";\n\nimport { tsvParse } from 'd3-dsv';\nimport { Button, Glyphicon } from 'react-bootstrap';\nimport { FieldProps } from 'react-jsonschema-form';\nimport ArrayField from 'react-jsonschema-form/lib/components/fields/ArrayField';\n\nexport const GenomeMetabolomeLinksField = (props: FieldProps) => {\n    const uploadRef = React.useRef<HTMLInputElement>(null);\n\n    function onClick() {\n        if (uploadRef.current) {\n            uploadRef.current.click();\n        }\n    }\n\n    function fillLinksFromFile(event: React.ChangeEvent<HTMLInputElement>) {\n        if (!event.target.files) {\n            return;\n          }\n          const file = event.target.files[0];\n          const reader = new FileReader();\n          reader.onload = () => {\n            if (reader.result) {\n              const rows = tsvParse(reader.result as string);\n              props.formContext.uploadGenomeMetabolomeLinks(rows);\n            }\n          };\n          reader.readAsText(file);\n    }\n\n    return (\n        <div>\n            <ArrayField {...props}/>\n            <Button onClick={onClick} title=\"Upload links from tab delimited file, will replace existing links, (meta)genomes and metabolomics experimental details\">\n                <Glyphicon glyph=\"upload\"/> Upload links\n                <input\n                    type=\"file\"\n                    accept=\"text/tab-separated-values,.tsv,.txt\"\n                    onChange={fillLinksFromFile}\n                    ref={uploadRef}\n                    style={{ display: \"none\" }}\n                />\n            </Button>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nimport { App } from \"../App\";\n\nexport function AddProject() {\n    return (\n        <div>\n            <h1>Add page for submitting a new dataset, prefilled when clone action</h1>\n            <App/>\n        </div>\n    );\n}","import * as React from \"react\";\n\nexport function EditProject() {\n    return (\n        <div>\n            <h1>Edit page for submitting a new dataset, prefilled</h1>\n        </div>\n    );\n}","import * as React from \"react\";\nimport { ButtonGroup, Button, Glyphicon } from \"react-bootstrap\";\n\nexport interface IProps {\n    onApprove(): void\n    onDeny(): void\n}\n\nexport const Decide = ({onApprove, onDeny}: IProps) => {\n    return (\n        <ButtonGroup>\n            <Button bsStyle=\"success\" onClick={onApprove}>\n                <Glyphicon glyph=\"ok\" /> Approve\n            </Button>\n            <Button bsStyle=\"danger\" onClick={onDeny}>\n                <Glyphicon glyph=\"remove\" /> Deny\n            </Button>\n        </ButtonGroup>\n    );\n}","import React, { useContext } from 'react';\n\nexport interface IAuth {\n    token: string;\n    setToken(token: string): void\n}\n\nexport const AuthContext = React.createContext<IAuth>({\n    token: '',\n    setToken: () => {}\n});","import * as React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Decide } from \"../Decide\";\nimport { AuthContext } from \"../auth\";\nimport { useContext } from \"react\";\n\nconst data = [{\n    _id: '/pending/MSV000078839.1',\n    gnps: 'MSV000078839',\n    pi: 'Justin van der Hooft',\n    nr_genomes: 3,\n    nr_growth_conditions: 3,\n    nr_extraction_methods: 3,\n    nr_instrumentation_methods: 1,\n    nr_genome_metabolmics_links: 21,\n    nr_genecluster_mspectra_links: 0,\n}];\n\n\nexport function PendingProjects() {\n    const {token} = useContext(AuthContext);\n    const rows = data.map(d => (\n        <tr key={d._id}>\n            <td>\n                <Decide onDeny={()=> {}} onApprove={()=> {}}/>\n            </td>\n            <td><Link to={d._id}>{d.gnps}</Link></td>\n            <td>{d.pi}</td>\n            <td>{d.nr_genomes}</td>\n            <td>{d.nr_growth_conditions}</td>\n            <td>{d.nr_extraction_methods}</td>\n            <td>{d.nr_instrumentation_methods}</td>\n            <td>{d.nr_genome_metabolmics_links}</td>\n            <td>{d.nr_genecluster_mspectra_links}</td>\n        </tr>\n    ));\n    return (\n        <div>\n            <h1>List page of pending datasets that require approval</h1>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Approve/Deny</th>\n                        <th>GNPS Massive identifier</th>\n                        <th>Principal investigator</th>\n                        <th>Nr of (meta)genomes</th>\n                        <th>Nr of growth conditions</th>\n                        <th>Nr of extraction methods</th>\n                        <th>Nr of instrumention methods</th>\n                        <th>Nr of links between genomes and metabolomics</th>\n                        <th>Nr of links between gene clusters and MS2 spectra</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </Table>\n            <span>API Token = {token}</span>\n        </div>\n    );\n}","import * as React from \"react\";\nimport { Decide } from \"../Decide\";\n\nimport { PairedDataRecord } from \"../PairedDataRecord\";\nimport { useFetch } from \"../useFetch\";\nimport { AuthContext } from \"../auth\";\nimport { useContext } from \"react\";\n\nexport function ReviewProject() {\n    const {token} = useContext(AuthContext);\n    const data = useFetch('/examples/paired_datarecord_MSV000078839_example.json');\n    const schema = useFetch('/schema.json');\n    let record = <span>Loading ...</span>;\n    if (data && schema) {\n        record = (\n            <div>\n                <Decide onDeny={()=> {}} onApprove={()=> {}}/>\n                <PairedDataRecord data={data} schema={schema}/>\n                <Decide onDeny={()=> {}} onApprove={()=> {}}/>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <h1>Review page with buttons to (dis)approve dataset</h1>\n            {record}\n            <span>API Token = {token}</span>\n        </div>\n    );\n}","import * as React from \"react\";\nimport Form, { ISubmitEvent } from \"react-jsonschema-form\";\nimport { JSONSchema6 } from \"json-schema\";\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface IProps {\n    onLogin(credentials: Credentials): void\n}\n\nconst schema: JSONSchema6 = {\n    title: 'Reviewing pending projects requires login',\n    type: 'object',\n    required: ['username', 'password'],\n    properties: {\n        username: {type: \"string\", title: 'Username', default: 'admin'},\n        password: {type: \"string\", title: 'Password'}\n    }\n};\n\nexport const Login = ({onLogin}: IProps) => {\n    const onSubmit = (event: ISubmitEvent<Credentials>) => {\n        onLogin(event.formData);\n    };\n    return (\n        <Form onSubmit={onSubmit} schema={schema}/>\n    );\n}","import * as React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface IProps {\n    onLogout(): void\n}\n\nexport const Logout = ({onLogout}: IProps) => {\n    return (\n        <Button onClick={onLogout}>logout</Button>\n    );\n}","import * as React from 'react';\nimport { Route, RouteProps } from 'react-router';\nimport { Login, Credentials } from './pages/Login';\nimport { AuthContext, IAuth } from './auth';\nimport { useState } from 'react';\nimport { Logout } from './pages/Logout';\n\nexport const ProtectedRoute = (props: RouteProps) => {\n    const storageKey = 'pdb-token';\n    const defaultToken = localStorage.getItem(storageKey) ? localStorage.getItem(storageKey) as string: '';\n    const [token, setToken] = useState<string>(defaultToken);\n    const onLogin = (creds: Credentials) => {\n        setToken(creds.password);\n        localStorage.setItem(storageKey, creds.password);\n    }\n    const onLogout = () => {\n        setToken('');\n        localStorage.removeItem(storageKey);\n    }\n    return (\n        <AuthContext.Provider value={{\n            token,\n            setToken\n        }}>\n            {(token) ? <div><Route {...props} /><Logout onLogout={onLogout}/></div> : <Login onLogin={onLogin} /> }\n        </AuthContext.Provider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nimport { Routes } from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\n\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport { Welcome } from './pages/Welcome';\nimport { Projects } from \"./pages/Projects\";\nimport { Project } from \"./pages/Project\";\nimport { AddProject } from \"./pages/AddProject\";\nimport { EditProject } from \"./pages/EditProject\";\nimport { PendingProjects } from \"./pages/PendingProjects\";\nimport { ReviewProject } from \"./pages/ReviewProject\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport { Navbar, Nav, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport function Routes() {\n    return (\n        <Router>\n            <Navbar>\n                <Navbar.Header>\n                    <Navbar.Brand>\n                        <Link to=\"/\" >Paired data platform</Link>\n                    </Navbar.Brand>\n                </Navbar.Header>\n                <Nav>\n                    <LinkContainer to=\"/projects\">\n                        <NavItem>List</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/add\">\n                        <NavItem>Add</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/pending\">\n                        <NavItem>Review</NavItem>\n                    </LinkContainer>\n                </Nav>\n            </Navbar>\n            <Switch>\n                <Route path=\"/\" exact component={Welcome} />\n                <Route path=\"/projects\" exact component={Projects} />\n                <Route path=\"/add\" exact component={AddProject} />\n                <Route path=\"/projects/:id/edit\" component={EditProject} />\n                <Route path=\"/projects/:id\" component={Project} />\n                <ProtectedRoute path=\"/pending\" exact component={PendingProjects} />\n                <ProtectedRoute path=\"/pending/:id\" component={ReviewProject} />\n            </Switch>\n        </Router>\n    );\n}"],"sourceRoot":""}