openapi: 3.0.3
info:
  title: Paired Omics Data Platform
  version: 0.4.0
  description: Web service for the Paired Omics Data Platform
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - description: Production
    url: https://pairedomicsdata.bioinformatics.nl/api
  - description: Local compose deployment
    url: http://localhost:8443/api
paths:
  /projects:
    get:
      description: Retrieve summary of all projects
      parameters:
        - name: q
          in: query
          description: Search query. Accepts [simple-query-string-syntax](https://www.elastic.co/guide/en/elasticsearch/reference/7.5/query-dsl-simple-query-string-query.html#simple-query-string-syntax) as syntax.
          schema:
            type: string
          example: MSV000078839
        - name: fk
          in: query
          description: Filter projects by a key/value pair. This is the key.
          example: principal_investigator
          schema:
            type: string
            enum:
              [
                "principal_investigator",
                "submitter",
                "genome_type",
                "species",
                "metagenomic_environment",
                "instrument_type",
                "ionization_mode",
                "ionization_type",
                "growth_medium",
                "solvent",
              ]
        - name: fv
          in: query
          description: Filter projects by a key/value pair. This is the value.
          example: Pieter C. Dorrestein
          schema:
            type: string
        - name: size
          in: query
          description: Page size
          example: 50
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: page
          in: query
          description: Page number
          example: 25
          schema:
            type: integer
            default: 0
            minimum: 0
            maximum: 1000
        - name: sort
          in: query
          description: Field to sort on
          example: nr_genomes
          schema:
            type: string
            default: 'met_id'
            enum: ["nr_genomes" , "score" , "_id" , "met_id" , "PI_name" , "submitters" , "nr_growth_conditions" , "nr_extraction_methods" , "nr_instrumentation_methods" , "nr_genome_metabolomics_links" , "nr_genecluster_mspectra_links"]
        - name: order
          in: query
          description: Order to sort
          example: asc
          schema:
            type: string
            default: 'desc'
            enum: ['asc', 'desc']
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
  /projects/{project_id}:
    get:
      description: Retrieve a project
      parameters:
        - name: project_id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A project like [example project](https://pairedomicsdata.bioinformatics.nl/examples/paired_datarecord_MSV000078839_example.json).
          content:
            application/json:
              schema:
                $ref: "/schema.json"
  /projects/{project_id}/enriched:
    get:
      description: Retrieve project enriched with information from following the genome database identifiers.
      parameters:
        - name: project_id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnrichedProject"
  /projects/{project_id}/history:
    get:
      description: Retrieve current and previous versions
      parameters:
        - name: project_id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectHistory"
  /stats:
    get:
      description: Retrieve statistics of all available projects inside platform
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stats"
  /version:
    get:
      description: Retrieve version info of web service
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionInfo"
  /health:
    get:
      description: Checks if all services of the platform are healthy
      responses:
        "200":
          description: Healthy Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthInfo"
        "503":
          description: Unhealhtly Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthInfo"
components:
  schemas:
    ProjectsResponse:
      type: object
      properties:
        data:
          description: Projects on current page
          type: array
          items:
            $ref: "#/components/schemas/ProjectSummary"
        total:
          description: Total number of projects
          type: integer
      required: [data, total]
      additionalProperties: false
    ProjectSummary:
      type: object
      properties:
        _id:
          type: string
        GNPSMassIVE_ID:
          type: string
        metabolights_study_id:
          type: string
        PI_name:
          type: string
        submitters:
          type: string
        nr_genomes:
          type: number
        nr_growth_conditions:
          type: number
        nr_extraction_methods:
          type: number
        nr_instrumentation_methods:
          type: number
        nr_genome_metabolmics_links:
          type: number
        nr_genecluster_mspectra_links:
          type: number
      required:
        - _id
        - GNPSMassIVE_ID
        - metabolights_study_id
        - PI_name
        - submitters
        - nr_genomes
        - nr_growth_conditions
        - nr_extraction_methods
        - nr_instrumentation_methods
        - nr_genome_metabolmics_links
        - nr_genecluster_mspectra_links
      additionalProperties: false
    BadRequestResponse:
      type: object
      properties:
        message:
          type: string
      required: [message]
    EnrichedProject:
      type: object
      properties:
        _id:
          type: string
        project:
          $ref: "/schema.json"
        enrichments:
          $ref: "#/components/schemas/Enrichments"
        score:
          description: Search score
          type: number
      required: [_id, project]
      additionalProperties: false
    Enrichments:
      type: object
      properties:
        genomes:
          $ref: "#/components/schemas/GenomeEnrichments"
      required: [genomes]
      additionalProperties: false
    GenomeEnrichment:
      properties:
        species:
          $ref: "#/components/schemas/Species"
        title:
          type: string
        url:
          type: string
      type: object
      required: [url, species]
      additionalProperties: false
    GenomeEnrichments:
      additionalProperties:
        $ref: "#/components/schemas/GenomeEnrichment"
      type: object
    Species:
      properties:
        scientific_name:
          type: string
        tax_id:
          type: number
      type: object
      required: [tax_id, scientific_name]
      additionalProperties: false
    ProjectHistory:
      type: object
      properties:
        current:
          $ref: "/schema.json"
        archived:
          type: array
          items:
            $ref: "#/components/schemas/ArchivedProject"
      required: [current, archived]
      additionalProperties: false
    ArchivedProject:
      # TODO adjust app+api, as archive now is [_id, project] instead of {_id, project}
      type: object
      properties:
        _id:
          type: string
          description: Project identifier
        project:
          $ref: "/schema.json"
      required: [_id, project]
      additionalProperties: false
    Stats:
      type: object
      required:
        - global
        - top
      additionalProperties: false
      properties:
        global:
          type: object
          required:
            - projects
            - principal_investigators
            - metabolome_samples
            - bgc_ms2
          properties:
            projects:
              type: integer
            principal_investigators:
              type: integer
            metabolome_samples:
              type: integer
            bgc_ms2:
              type: integer
        top:
          type: object
          required:
            - principal_investigators
            - submitters
            - genome_types
            - instrument_types
            - growth_media
            - solvents
            - species
            - metagenomic_environment
          properties:
            principal_investigators:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            submitters:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            genome_types:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            instrument_types:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            growth_media:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            solvents:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            species:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
            metagenomic_environment:
              type: array
              items:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: number
    VersionInfo:
      type: object
      properties:
        api:
          type: string
          description: Version of web service
        dataset:
          type: object
          properties:
            doi:
              type: string
              description: DOI link of dataset
            zenodo:
              type: string
              description: Zenodo upload url of dataset
          required: [doi, zenodo]
          additionalProperties: false
      required: [api]
      additionalProperties: false
    HealthInfo:
      # Based on https://tools.ietf.org/html/draft-inadarei-api-health-check-05
      type: object
      properties:
        status:
          type: string
          enum:
            - pass
            - warn
            - fail
        checks:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                enum:
                  - pass
                  - warn
                  - fail
            required:
              - status
            additionalProperties: false
      required:
        - status
      additionalProperties: false
